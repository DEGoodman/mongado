name: Deploy Articles Only

on:
  push:
    branches: [main]
    paths:
      - 'backend/static/articles/**'
      - 'backend/static/assets/**'
  workflow_dispatch:  # Allow manual deployment

jobs:
  deploy-static:
    name: Deploy Static Content
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DO_SSH_PRIVATE_KEY }}

      - name: Add DigitalOcean host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.DO_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy static files
        env:
          DO_HOST: ${{ secrets.DO_HOST }}
          DO_USER: ${{ secrets.DO_USER }}
          ADMIN_PASSKEY: ${{ secrets.ADMIN_PASSKEY }}
        run: |
          ssh $DO_USER@$DO_HOST "bash -s" "$ADMIN_PASSKEY" << 'EOF'
            set -e

            ADMIN_PASSKEY="$1"

            echo "üìÑ Deploying static content (zero-downtime)..."

            # Navigate to project directory
            cd /opt/mongado || { echo "Project directory not found"; exit 1; }

            # Pull latest changes (backend will auto-detect via volume mount)
            echo "üîÑ Pulling latest static files from main branch..."
            git fetch origin
            git reset --hard origin/main

            # Wait a moment for file system to settle
            sleep 2

            # Verify backend is healthy and can see new files
            echo "üè• Verifying backend health..."
            if ! curl -f http://localhost:8000/health > /dev/null 2>&1; then
              echo "‚ùå Backend is not healthy"
              docker logs --tail 50 mongado-backend-prod
              exit 1
            fi
            echo "‚úÖ Backend is healthy"

            # Trigger embedding sync via API (requires admin auth)
            echo "üîÑ Triggering embedding sync..."
            SYNC_RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
              -H "Authorization: Bearer $ADMIN_PASSKEY" \
              http://localhost:8000/api/admin/sync-embeddings)

            HTTP_CODE=$(echo "$SYNC_RESPONSE" | tail -n1)
            RESPONSE_BODY=$(echo "$SYNC_RESPONSE" | head -n-1)

            if [ "$HTTP_CODE" = "200" ]; then
              echo "‚úÖ Embedding sync triggered successfully"
              echo "$RESPONSE_BODY"
            else
              echo "‚ö†Ô∏è  Embedding sync failed (HTTP $HTTP_CODE). Articles deployed but embeddings may be stale."
              echo "$RESPONSE_BODY"
            fi

            echo "‚úÖ Static content deployment complete (no restart required)!"
          EOF

      - name: Deployment notification
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "‚úÖ Static content deployed successfully!"
          else
            echo "‚ùå Static content deployment failed!"
          fi

      - name: Verify deployment
        run: |
          echo "üîç Verifying static content deployment..."
          sleep 3

          # Check backend API
          BACKEND_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://api.mongado.com/ || echo "000")
          if [ "$BACKEND_STATUS" = "200" ]; then
            echo "‚úÖ Backend API responding (Status: $BACKEND_STATUS)"
          else
            echo "‚ö†Ô∏è  Backend API status: $BACKEND_STATUS"
          fi
